import pandas as pd
import matplotlib.pyplot as plt
from cb_set_pars import hp_settings, orc_settings
from cb_network import hp_network, orc_network
from tes_func import time_analysis_TES
from config import V, P_out, P_in, P_min, rho

plt.rcParams.update({'font.size': 14})

def tes_plot_init(df_2022, temp_2022):

    fig1 = plt.figure(figsize=(14, 7))
    ax1 = fig1.add_subplot(1, 2, 1)
    ax1.plot(df_2022["RES"].resample("D").mean(), color="green")
    ax1.plot(df_2022["Residual"].resample("D").mean(), color="black")
    ax1.set_xlabel('Time')
    ax1.grid(True)
    ax1.set_ylabel('Power [GW]')
    ax1.legend(["RES", "Load"])
    ax1.set_ylim(0, 140)
    plt.xticks(rotation=90)
    plt.tight_layout(pad=3.0)
    ax1.set_title("Residual load and power generation from RES in Germany\n (daily mean, 2022)", fontsize=16, pad=20)

    ax2 = fig1.add_subplot(1, 2, 2)
    ax2.plot(temp_2022, color="grey", linewidth=0.5)
    ax2.set_xlabel('Time')
    ax2.grid(True)
    ax2.set_ylabel('Temperature [°C]')
    ax2.set_ylim(-20, 40)
    plt.xticks(rotation=90)
    plt.tight_layout(pad=3.0)
    ax2.set_title("Temperature in Potsdam\n (hourly, 2022)", fontsize=16, pad=20)
    plt.show()

    fig2 = plt.figure(figsize=(14, 7))
    ax1 = fig2.add_subplot(1, 2, 1)
    ax1.plot(df_2022["RES new"].resample("D").mean(), color="green")
    ax1.plot(df_2022["Residual"].resample("D").mean(), color="black")
    ax1.set_xlabel('Time')
    ax1.grid(True)
    ax1.set_ylabel('Power [GW]')
    ax1.legend(["RES", "Load"])
    plt.xticks(rotation=90)
    plt.tight_layout(pad=3.0)
    ax1.set_ylim(0, 140)
    ax1.set_title("Residual load and power generation from RES in Germany\n (daily mean, future scenario)", fontsize=16, pad=20)

    ax2 = fig2.add_subplot(1, 2, 2)
    ax2.plot(temp_2022, color="grey", linewidth=0.5)
    ax2.set_xlabel('Time')
    ax2.grid(True)
    ax2.set_ylabel('Temperature [°C]')
    ax2.set_ylim(-20, 40)
    plt.xticks(rotation=90)
    plt.tight_layout(pad=3.0)
    ax2.set_title("Temperature in Potsdam\n (hourly, 2022)", fontsize=16, pad=20)
    plt.show()

    fig3 = plt.figure(figsize=(14, 7))
    ax1 = fig3.add_subplot(1, 2, 1)
    ax1.plot(df_2022["Residual for CB"].resample("H").mean(), color="black")
    ax1.axhline(y=0, linestyle='--', color="grey")
    ax1.set_xlabel('Time')
    ax1.grid(True)
    ax1.set_ylabel('Power [MW]')
    ax1.set_ylim(-2.5, 2.5)
    plt.xticks(rotation=90)
    plt.tight_layout(pad=3.0)
    ax1.set_title("Example of demand curve for a CB\n (hourly)", fontsize=16, pad=20)

    ax2 = fig3.add_subplot(1, 2, 2)
    ax2.plot(temp_2022, color="grey", linewidth=0.5)
    ax2.axhline(y=15, linestyle='--', color="red", linewidth=2)
    ax2.axhline(y=0, linestyle='--', color="blue", linewidth=2)
    ax2.set_xlabel('Time')
    ax2.grid(True)
    ax2.set_ylabel('Temperature [°C]')
    ax2.set_ylim(-20, 40)
    plt.xticks(rotation=90)
    plt.tight_layout(pad=3.0)
    plt.legend(["Temperature", "Limit of ORC", "Limit of HP"], loc='lower center')
    ax2.set_title("Example temperature profile for CB\n (hourly, 2022)", fontsize=16, pad=20)
    plt.show()

    summer_week = df_2022.loc["2022-07-01":"2022-07-07"]

    fig4 = plt.figure(figsize=(14, 7))
    ax1 = fig4.add_subplot(1, 2, 1)
    ax1.plot(summer_week["Residual for CB"].resample("H").mean(), color="black")
    ax1.axhline(y=0, linestyle='--', color="grey")
    ax1.set_xlabel('Time')
    plt.tight_layout(pad=6.0)
    plt.xticks(rotation=90)
    ax1.grid(True)
    ax1.set_ylabel('Power [MW]')
    ax1.set_ylim(-2.5, 2.5)
    ax1.set_title("Demand curve for CB (hourly, summer week)", fontsize=16, pad=20)

    winter_week = df_2022.loc["2022-01-01":"2022-01-07"]

    ax2 = fig4.add_subplot(1, 2, 2)
    ax2.plot(winter_week["Residual for CB"].resample("H").mean(), color="black")
    ax2.axhline(y=0, linestyle='--', color="grey")
    ax2.set_xlabel('Time')
    plt.xticks(rotation=90)
    ax2.grid(True)
    ax2.set_ylabel('Power [MW]')
    ax2.set_ylim(-2.5, 2.5)
    ax2.set_title("Demand curve for CB (hourly, winter week)", fontsize=16, pad=20)
    plt.show()

def tes_plot_period(df_2022, df_period, begin_period, end_period):

    fig5 = plt.figure(figsize=(14, 7))
    ax1 = fig5.add_subplot(1, 2, 1)
    ax1.fill_between(df_period.index, -df_period["Charging volume"], 0, color="blue")
    ax1.fill_between(df_period.index, 0, df_period["Discharging volume"], color="red")
    ax1.axhline(y=0, linestyle='--', color="grey")
    ax1.set_xlabel('Time')
    plt.tight_layout(pad=6.0)
    plt.xticks(rotation=90)
    plt.legend(["Charging", "Discharging"], loc='lower right')
    ax1.grid(True)
    ax1.set_ylabel('Volume flow [m3/h]')
    ax1.set_ylim(-70, 70)
    ax1.set_title("Charging and discharging of the CB", fontsize=16, pad=20)

    ax2 = fig5.add_subplot(1, 2, 2)
    ax2.plot(df_2022.loc[begin_period:end_period, "Residual for CB"].resample("H").mean(), color="black")
    ax2.axhline(y=0, linestyle='--', color="grey")
    ax2.set_xlabel('Time')
    plt.tight_layout(pad=6.0)
    plt.xticks(rotation=90)
    ax2.grid(True)
    ax2.set_ylabel('Power [MW]')
    ax2.set_ylim(-2, 2)
    ax2.set_title("Demand curve (positive deficit, negative surplus)", fontsize=16, pad=20)
    plt.show()

    fig6 = plt.figure(figsize=(14, 7))
    ax1 = fig6.add_subplot(1, 1, 1)
    ax1.fill_between(df_period.index, df_period["SOC"], 0, color="green")
    ax1.set_xlabel('Time')
    plt.tight_layout(pad=6.0)
    plt.xticks(rotation=90)
    ax1.grid(True)
    ax1.set_ylim(0, V)
    ax1.set_ylabel('SOC [m3]')
    ax1.set_title("State of charge of the TES in the summer", fontsize=16, pad=20)
    plt.show()

